import { Schema, SchemaType } from '../types';
export declare const returnUndefined: import("lodash/fp").LodashNoop;
export declare const getAllSchemaKeys: import("lodash/fp").LodashKeys;
export declare const getSchemaField: import("lodash/fp").LodashGet;
export declare const getSchemaFields: import("lodash/fp").LodashPick;
export declare const getSchemaType: import("lodash/fp").LodashGet11x1;
export declare const getSchemaTitle: import("lodash/fp").LodashGet11x1;
export declare const getSchemaProperty: (key: string) => import("lodash/fp").LodashGet11x1;
export declare const getSchemaProperties: import("lodash/fp").LodashGet11x1;
export declare const getSchemaItems: import("lodash/fp").LodashGet11x1;
export declare const setSchemaField: import("lodash/fp").LodashSet;
export declare const setSchemaType: import("lodash/fp").LodashSet1x1;
export declare const setSchemaTitle: import("lodash/fp").LodashSet1x1;
export declare const setSchemaId: import("lodash/fp").LodashSet1x1;
export declare const setSchemaProperties: import("lodash/fp").LodashSet1x1;
export declare const setSchemaProperty: (key: string) => import("lodash/fp").LodashSet1x1;
export declare const setSchemaItems: import("lodash/fp").LodashSet1x1;
export declare const deleteSchemaField: import("lodash/fp").LodashUnset;
export declare const deleteSchemaProperty: (key: string) => import("lodash/fp").LodashUnset1x1;
export declare const addSchemaProperty: (schema: Schema) => Schema;
export declare const renameSchemaField: (oldKey: string, newKey: string) => (...args: any[]) => any;
export declare const renameSchemaProperty: (oldKey: string, newKey: string, schema: Schema) => any;
export declare const isSchemaObject: (schema: Schema) => boolean;
export declare const isSchemaArray: (schema: Schema) => boolean;
export declare const findOption: (value: string) => import("lodash/fp").LodashFind2x1<[string, string]>;
export declare const getValidFields: (type: SchemaType) => string[];
export declare const removeWrongFields: (schema: Schema) => Pick<Schema, string>;
export declare const hasSchemaProperties: (schema: Schema) => boolean;
export declare const hasSchemaItems: (schema: Schema) => boolean;
export declare const getSchemaMenuOptions: (type: SchemaType) => import("../types").SchemaMenuOption[];
export declare const setSchemaTypeAndRemoveWrongFields: (...args: any[]) => any;
export declare const stringsToOptions: import("lodash/fp").LodashMap1x1<unknown, {
    label: unknown;
    value: unknown;
}>;
